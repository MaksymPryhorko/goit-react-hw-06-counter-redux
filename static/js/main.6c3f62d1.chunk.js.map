{"version":3,"sources":["redux/counter/counter-types.js","Counter/Coutner.jsx","redux/counter/counter-actions.js","App.js","redux/counter/counter-reducer.js","redux/store.js","index.js"],"names":["connect","state","value","counter","step","dispatch","onIncrement","type","actionTypes","payload","onDecrement","onClick","App","combineReducers","rootReducer","counterReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAGe,EAHG,oBAGH,EAFG,oB,OCmBlB,IAUeA,eAVS,SAACC,GAAD,MAAY,CAClCC,MAAOD,EAAME,QAAQD,MACrBE,KAAMH,EAAME,QAAQC,SAGK,SAACC,GAAD,MAAe,CACxCC,YAAa,SAACF,GAAD,OAAUC,ECxBY,CACnCE,KAAMC,EACNC,QDsBkDL,KAClDM,YAAa,SAACN,GAAD,OAAUC,ECpBY,CACnCE,KAAMC,EACNC,QDkBkDL,QAGrCJ,EA3Bf,YAA6D,IAA1CE,EAAyC,EAAzCA,MAAOE,EAAkC,EAAlCA,KAAME,EAA4B,EAA5BA,YAAaI,EAAe,EAAfA,YAC3C,OACE,gCACE,6BAAKR,IACL,qDAASE,KAET,wBAAQG,KAAK,SAASI,QAAS,kBAAML,EAAYF,IAAjD,eAIA,wBAAQG,KAAK,SAASI,QAAS,kBAAMD,EAAYN,IAAjD,qBEPSQ,MAJf,WACE,OAAO,cAAC,EAAD,K,cCeMC,4BAAgB,CAC7BX,MAhBmB,WAAmC,IAAlCD,EAAiC,uDAAzB,EAAyB,yCAApBM,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QACvC,OAAQF,GACN,KAAKC,EACH,OAAOP,EAAQQ,EAEjB,KAAKD,EACH,OAAOP,EAAQQ,EAEjB,QACE,OAAOR,IAQXG,KAJkB,eAACH,EAAD,uDAAS,EAAT,2CAAcM,KAAd,EAAoBE,QAApB,OAAkCR,KCZhDa,EAAcD,0BAAgB,CAClCV,QAASY,IAIIC,EADDC,sBAAYH,EAAaI,iCCDvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.6c3f62d1.chunk.js","sourcesContent":["const INCREMENT = \"counter/Increment\";\nconst DECREMENT = \"counter/Decrement\";\n\nexport default { INCREMENT, DECREMENT };\n","import { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/counter/counter-actions\";\r\n\r\nfunction Counter({ value, step, onIncrement, onDecrement }) {\r\n  return (\r\n    <div>\r\n      <h1>{value}</h1>\r\n      <h2>Шаг:{step}</h2>\r\n\r\n      <button type=\"button\" onClick={() => onIncrement(step)}>\r\n        +\r\n      </button>\r\n\r\n      <button type=\"button\" onClick={() => onDecrement(step)}>\r\n        -\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.counter.value,\r\n  step: state.counter.step,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onIncrement: (step) => dispatch(actions.increment(step)),\r\n  onDecrement: (step) => dispatch(actions.decrement(step)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","import actionTypes from \"./counter-types\";\n\nexport const increment = (value) => ({\n  type: actionTypes.INCREMENT,\n  payload: value,\n});\n\nexport const decrement = (value) => ({\n  type: actionTypes.DECREMENT,\n  payload: value,\n});\n","import Counter from \"./Counter/Coutner\";\n\nfunction App() {\n  return <Counter />;\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport actionTypes from \"./counter-types\";\n\nconst valueReducer = (state = 0, { type, payload }) => {\n  switch (type) {\n    case actionTypes.INCREMENT:\n      return state + payload;\n\n    case actionTypes.DECREMENT:\n      return state - payload;\n\n    default:\n      return state;\n  }\n};\n\nconst stepReducer = (state = 5, { type, payload }) => state;\n\nexport default combineReducers({\n  value: valueReducer,\n  step: stepReducer,\n});\n","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport counterReducer from \"./counter/counter-reducer\";\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\nexport default store;\n\n//3\n// const counterInitialState = {\n//   value: 0,\n//   step: 5,\n// };\n\n// const counterReducer = (state = counterInitialState, { type, payload }) => {\n//   switch (type) {\n//     case \"counter/Increment\":\n//       return {\n//         ...state, // Распыление всего стейта нужно, если в стейте, есть еще обьекты, кроме \"counter\".\n//         value: state.value + payload,\n//       };\n\n//     case \"counter/Decrement\":\n//       return {\n//         ...state, // Распыление всего стейта нужно, если в стейте, есть еще обьекты, кроме \"counter\".\n//         value: state.value - payload,\n//       };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const rootReducer = combineReducers({\n//   counter: counterReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n// export default store;\n\n//2\n// const initialState = {\n//   counter: {\n//     value: 0,\n//     step: 5,\n//   },\n// };\n\n// const reducer = (state = initialState, { type, payload }) => {\n//   switch (type) {\n//     case \"counter/Increment\":\n//       return {\n//         ...state, // Распыление всего стейта нужно, если в стейте, есть еще обьекты, кроме \"counter\".\n//         counter: {\n//           ...state.counter, // Распыление state.counter нужно, если в state.counter есть еще свойства, кроме value.\n//           value: state.counter.value + payload,\n//         },\n//       };\n\n//     case \"counter/Decrement\":\n//       return {\n//         ...state, // Распыление всего стейта нужно, если в стейте, есть еще обьекты, кроме \"counter\".\n//         counter: {\n//           ...state.counter, // Распыление state.counter нужно, если в state.counter есть еще свойства, кроме value.\n//           value: state.counter.value - payload,\n//         },\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// const store = createStore(reducer, composeWithDevTools());\n// export default store;\n\n//1\n// const initialState = { counterValue: 0 };\n\n// const reducer = (state = initialState, { type, payload }) => {\n//   switch (type) {\n//     case \"counter/Increment\":\n//       return { counterValue: state.counterValue + payload };\n\n//     case \"counter/Decrement\":\n//       return { counterValue: state.counterValue - payload };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const store = createStore(reducer, composeWithDevTools());\n// export default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}